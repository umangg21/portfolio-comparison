{"version":3,"sources":["API sync /^/.//USDto.*/.json$","API sync /^/.//.*/.json$","serviceWorker.js","Components/common/RoundedRectLegend.jsx","Components/ChartView.jsx","Components/common/ButtonBarSeries.jsx","Service/ApiService.js","Components/Main.jsx","index.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","Boolean","window","location","hostname","match","RoundedRectLegend","payload","className","entry","index","color","value","trim","key","style","ChartView","this","props","title1","title2","graphData","currency","height","width","isAnimationActive","data","stroke","strokeDasharray","vertical","dataKey","tickFormatter","it","dayjs","Date","format","yAxisId","domain","dataMin","dataMax","toFixed","content","iconType","dot","connectNulls","strokeWidth","type","name","Component","InstitutionalFundFlowTooltip","active","customDiv","title","fill","borderRadius","backgroundColor","marginTop","date","data1","data2","ButtonBarSeries","getButton","isHighlighted","isFirst","isLast","extraStyle","onClick","onSelected","getButtons","dataSeries","i","selectedId","length","React","memo","ApiService","getStartDate","time","todaydate","setHours","setDate","getDate","getTime","setMonth","getMonth","getFullYear","setFullYear","getIndex","dataLength","chart","result","timestamp","startIndex","startDate","endIndex","prepareData","benchmark","finalData","multiplierAPI","require","undefined","Array","isArray","multiplier","parseFloat","history","push","indicators","quote","close","getData","CurrencyOptions","TimeSeriesOptions","BenchmarkOptions","Main","state","setState","onChange","target","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.b46eb775.chunk.js","sourcesContent":["var map = {\n\t\"./USDtoSGD.json\": 131\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 358;","var map = {\n\t\"./SWTSX.json\": 360,\n\t\"./URL.json\": 361,\n\t\"./USDtoSGD.json\": 131,\n\t\"./VBMFX.json\": 362,\n\t\"./VFINX.json\": 132,\n\t\"./VIMAX.json\": 363,\n\t\"./VTSMX.json\": 364,\n\t\"./WFIVX.json\": 365\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 359;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\n\nconst RoundedRectLegend = ({payload}) => {\n    return (\n        <div className=\"d-flex align-items-center justify-content-around\">\n            <div/>\n            <div className=\"d-flex flex-wrap align-items-center justify-content-center\">\n                {\n                    payload.map((entry, index) => {\n                            const {color} = entry;\n                            if (!entry || !entry.value || !entry.value.trim()) return null\n                            return (\n                                <div className=\"d-flex align-items-center mx-2\" key={`item-${index}`}>\n                                    <div className=\"legendBox mr-2\" style={{\"backgroundColor\": color}}/>\n                                    <p className=\"legendText mb-0\">{entry.value}</p>\n                                </div>\n                            )\n                        }\n                    )\n                }\n            </div>\n            <div/>\n        </div>\n    );\n};\n\nexport default RoundedRectLegend;","import React, { Component } from 'react'\nimport {\n    CartesianGrid,\n    Legend,\n    Line,\n    LineChart,\n    ResponsiveContainer,\n    Tooltip,\n    XAxis,\n    YAxis,\n} from 'recharts'\nimport RoundedRectLegend from './common/RoundedRectLegend'\nimport dayjs from 'dayjs'\n\nconst dateFormat = \"MMM YYYY\"\nclass ChartView extends Component {\n    \n    render() {\n        const { title1, title2, graphData = [], currency } = this.props\n        return (\n            <div>\n                <ResponsiveContainer height={300} width=\"100%\">\n                    <LineChart isAnimationActive={true} width={600} height={300}\n                        data={graphData}>\n                        <CartesianGrid stroke=\"#5d5d5d\" strokeDasharray=\"5 5\" vertical={false} />\n\n                        <XAxis dataKey=\"date\"\n                            tickFormatter={(it) => dayjs(new Date(it)).format(dateFormat)} />\n                        <YAxis\n                            yAxisId=\"left\"\n                            domain={[(dataMin) => dataMin > 20 ? dataMin-20 : 0 , (dataMax) => dataMax + 20]}\n                            tickFormatter={(it) => it?.toFixed(0)} \n                        />\n\n                        <Legend content={RoundedRectLegend} iconType=\"rect\" />\n                        <Tooltip content={<InstitutionalFundFlowTooltip title1={title1} title2={title2} currency={currency}/>} />\n\n                        <Line yAxisId=\"left\"\n                            dot={false}\n                            connectNulls={true}\n                            strokeWidth={1.7}\n                            type=\"linear\"\n                            dataKey=\"data1\"\n                            name={title1}\n                            stroke=\"#42c6ff\" />\n\n                        {\n                            title2 &&\n                            <Line yAxisId=\"left\"\n                                dot={false}\n                                connectNulls={true}\n                                strokeWidth={1.7}\n                                type=\"linear\"\n                                dataKey=\"data2\"\n                                name={title2}\n                                stroke=\"#ffbf39\" />\n                        }\n\n                    </LineChart>\n                </ResponsiveContainer>\n            </div>\n        )\n    }\n}\n\nexport default ChartView\n\nclass InstitutionalFundFlowTooltip extends Component {\n\n    shouldComponentUpdate() {\n        return true\n    }\n\n\n    render() {\n        const { active, title1, title2, currency } = this.props;\n        if (!active) return null;\n\n        let { payload } = this.props;\n        if (!payload) return null;\n        payload = payload[0].payload;\n\n        const customDiv = (title, value, fill) => {\n            return (\n                <div className=\"col-12 mb-2\">\n                    <div className=\"d-flex align-items-start justify-content-end\">\n                        <div className=\"mr-2\">\n                            <div style={{\n                                height: `10px`,\n                                width: `10px`,\n                                borderRadius: `3px`,\n                                backgroundColor: `${fill}`,\n                                marginTop: `3px`\n                            }} />\n                        </div>\n                        <span className=\"fs-12 text-muted mr-2\">{title}</span>\n                    </div>\n                        <p className=\"fs-14 text-end mr-2 fw-600 text-primary\">${value?.toFixed(2)} {currency}</p>\n\n                </div>\n            )\n        }\n\n        return <div className=\"toolTipBackground p-3 w-100\">\n            <p className=\"fw-500 fs-13 mb-2 text-end mr-2\">As on {dayjs(new Date(payload.date)).format(\"DD MMM, YYYY\")}</p>\n            <div className=\"row fw-500\">\n\n                {customDiv(title1, payload.data1, \"#42c6ff\")}\n\n                {\n                    title2 && customDiv(title2, payload.data2, \"#ffbf39\")\n                }\n\n            </div>\n        </div>\n    }\n}","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\n\nclass ButtonBarSeries extends Component {\n\n    getButton = (data, isHighlighted, isFirst, isLast) => {\n        let extraStyle = \"\";\n        if (isFirst)\n            extraStyle = 'buttonNormalLeft';\n        if (isLast)\n            extraStyle = 'buttonNormalRight';\n\n        return <p\n            className={`${isHighlighted ? 'buttonHighlightedSmall' : 'buttonNormalSmall'} ${extraStyle}`}\n            onClick={() => {\n                if (!isHighlighted) this.onSelected(data);\n            }}>{data.title}</p>\n    };\n\n    getButtons = () => {\n        return this.props.dataSeries.map((data, i) => {\n            return <div className=\"py-1 small\" key={data.id}>\n                {this.getButton(data, data.id === this.props.selectedId, i === 0, i === this.props.dataSeries.length - 1)}\n            </div>;\n        });\n    };\n\n    onSelected = (data) => {\n        if (this.props.onSelected)\n            this.props.onSelected(data);\n    };\n\n    render() {\n        return <div className={`d-flex flex-row flex-wrap align-items-center justify-content-end buttonBar`}>\n            {this.getButtons()}\n        </div>\n    }\n}\n\nexport default React.memo(ButtonBarSeries);\n\nButtonBarSeries.propTypes = {\n    onSelected: PropTypes.func.isRequired,\n    delayedLoading: PropTypes.bool\n};","import dayjs from 'dayjs'\n\nconst dateFormat = \"YYYY-MM-DD\"\n\nexport default class ApiService {\n\n\n    static getStartDate = (time) => {\n        let todaydate = new Date(new Date(2020, 3, 9).setHours(0, 0, 0, 0))\n        let newDate;\n        switch (time) {\n            case \"1m\":\n                newDate = new Date(todaydate.setDate(todaydate.getDate() - 30))\n                return newDate.getTime() / 1000\n\n            case \"6m\":\n                newDate = new Date(todaydate.setMonth(todaydate.getMonth() - 6))\n                return newDate.getTime() / 1000\n\n            case \"ytd\":\n                newDate = new Date(new Date().getFullYear(), 0, 1)\n                return newDate.getTime() / 1000\n\n            case \"1y\":\n                newDate = new Date(todaydate.setFullYear(todaydate.getFullYear() - 1))\n                return newDate.getTime() / 1000\n\n            case \"5y\":\n                newDate = new Date(todaydate.setFullYear(todaydate.getFullYear() - 5))\n                return newDate.getTime() / 1000\n\n            case \"max\":\n            default:\n                return false\n\n        }\n    }\n\n    static getIndex = (data, time) => {\n        const dataLength = data?.chart?.result[0]?.timestamp?.length\n        let startIndex = 0\n\n        if (time !== \"max\") {\n            let startDate = this.getStartDate(time)\n            if (startDate) {\n                for (let index = dataLength - 1; index >= 0; index--) {\n                    let currentTimeStap = data.chart.result[0].timestamp[index]\n                    if (startDate > currentTimeStap) {\n                        startIndex = index + 1\n                        break;\n                    }\n                }\n            }\n        }\n        const endIndex = dataLength\n\n        return { startIndex, endIndex }\n    }\n\n    static prepareData = (data1, data2, time, currency, benchmark) => {\n        const finalData = []\n\n        const { startIndex, endIndex } = this.getIndex(data1, time)\n\n        const multiplierAPI = currency !== \"USD\" ? require(`../API/USDto${currency}.json`) : undefined\n\n        if (Array.isArray(data1?.chart?.result[0]?.timestamp)) {\n            for (let index = startIndex; index < endIndex; index++) {\n\n                const timestamp = data1.chart.result[0].timestamp[index] * 1000;\n\n                let multiplier = 1\n                if (multiplierAPI) {\n                    const date = dayjs(new Date(timestamp)).format(dateFormat)\n                    multiplier = parseFloat(multiplierAPI?.history[date] ?? 1.4)\n                }\n\n                finalData.push({\n                    date: timestamp,\n                    data1: data1?.chart?.result[0].indicators?.quote[0]?.close[index] * multiplier,\n                    ...data2 && {\n                        data2: data2?.chart?.result[0].indicators?.quote[0]?.close[index] * multiplier,\n                    }\n                })\n            }\n        }\n\n        return finalData\n    }\n\n    static getData = (time, currency, benchmark) => {\n        const data1 = require('../API/VFINX.json')\n        const data2 = benchmark ? require(`../API/${benchmark}.json`) : undefined\n        return this.prepareData(data1, data2, time, currency, benchmark)\n    }\n}","import React, { Component } from 'react'\nimport ChartView from './ChartView'\nimport ButtonBarSeries from './common/ButtonBarSeries'\nimport ApiService from '../Service/ApiService'\n\nconst CurrencyOptions = [\n    { id: \"USD\", title: \"USD\" },\n    { id: \"SGD\", title: \"SGD\" }\n]\n\nconst TimeSeriesOptions = [\n    { id: \"1m\", title: \"1 month\" },\n    { id: \"6m\", title: \"6 months\" },\n    { id: \"ytd\", title: \"Year-to-date\" },\n    { id: \"1y\", title: \"1 year\" },\n    { id: \"5y\", title: \"5 years\" },\n    { id: \"max\", title: \"Max\" },\n]\n\nconst BenchmarkOptions = [\"VBMFX\", \"VTSMX\", \"SWTSX\", \"WFIVX\", \"VIMAX\"]\n\n\nclass Main extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            currency: \"USD\",\n            time: \"1m\",\n            benchmark: \"\",\n            graphData: []\n        }\n    }\n\n    getData = () => {\n        const { time, currency, benchmark } = this.state\n        const graphData = ApiService.getData(time, currency, benchmark)\n        this.setState({ graphData })\n    }\n\n    componentDidMount() {\n        this.getData()\n    }\n\n    render() {\n        return (\n            <div>\n                <nav className=\"navbar navbar-light\">\n                    \n                </nav>\n\n                <div className=\"body-container container\">\n                    <h3 className=\"mb-4\">Portfolio benchmark</h3>\n\n                    <div className=\"body-benchmark-container mb-4\">\n                        <div className=\"container\">\n                            <div className=\"row\">\n                                <div className=\"col-12 col-md-5\">\n                                    <h3 className=\"font-weight-bold mb-1 text-secondary\">General Investing</h3>\n                                    <p className=\"font-weight-bold text-primary\">Stashaway Risk Index 14%</p>\n                                </div>\n                                <div className=\"col-12 col-md-2 d-flex justify-content-center\">\n                                    <div className=\"benchmark-vs-sign text-white fw-600 fs-24 d-flex align-items-center justify-content-center my-2\">\n                                        vs\n                                    </div>\n                                </div>\n                                <div className=\"col-12 col-md-5\">\n                                    <select className=\"custom-select custom-select-lg mb-3\"\n                                        value={this.state.benchmark}\n                                        onChange={(e) => {\n                                            this.setState({\n                                                benchmark: e.target.value\n                                            }, this.getData)\n                                        }}\n                                    >\n                                        <option value=\"\" >Select</option>\n                                        {\n                                            BenchmarkOptions?.map((benchmark) =>\n                                                <option key={benchmark} value={benchmark}>{benchmark}</option>\n                                            )\n                                        }\n                                    </select>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className=\"d-flex justify-content-end justify-content-sm-between mb-3 flex-wrap\">\n                        <ButtonBarSeries\n                            dataSeries={TimeSeriesOptions}\n                            onSelected={(data) => {\n                                this.setState({\n                                    time: data.id\n                                }, this.getData)\n                            }}\n                            selectedId={this.state.time}\n                        />\n\n                        <ButtonBarSeries\n                            dataSeries={CurrencyOptions}\n                            onSelected={(data) => {\n                                this.setState({\n                                    currency: data.id\n                                }, this.getData)\n                            }}\n                            selectedId={this.state.currency}\n                        />\n                    </div>\n\n                    <div className=\"chat-container\">\n                        <h4 className=\"font-weight-bold mb-1 text-secondary\">Portfolio based on your gross returns</h4>\n                        <p className=\"font-weight-bold text-secondary fs-13 mb-4\">Gross returns and exchange rates sourced from Yahoo as of 09 April, 2020</p>\n                        <ChartView\n                            title1={\"Stashaway 14%\"}\n                            title2={this.state.benchmark}\n                            graphData={this.state.graphData}\n                            currency={this.state.currency}\n                        />\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Main\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\n\nimport * as serviceWorker from './serviceWorker';\nimport Main from './Components/Main';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Main />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}